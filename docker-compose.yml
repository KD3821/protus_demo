version: "3.8"
services:
  db_messages:
    image: postgres:15.2
    restart: always
    container_name: postgre_messages
    env_file:
      - messages_app/.env
    environment:
      - POSTGRES_USER=messages_admin
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=messages_db
    volumes:
      - ./postgres_messages_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    expose:
      - 5432
  db_auth:
    image: postgres:15.2
    restart: always
    container_name: postgre_auth
    env_file:
      - fast_auth/.env
    environment:
      - POSTGRES_USER=fast_auth_admin
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=fast_auth_db
    volumes:
      - ./postgres_auth_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - 5432
  db_pay:
    image: postgres:15.2
    restart: always
    container_name: postgre_pay
    env_file:
      - fast_pay/.env
    environment:
      - POSTGRES_USER=fast_pay_admin
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=fast_pay_db
    volumes:
      - ./postgres_pay_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    expose:
      - 5432
  backend_protus_gate:
    container_name: backend_protus_gate
    restart: always
    build:
      context: ./fast_gate
      dockerfile: Dockerfile
    image: protus_gate_image
    volumes:
      - ./fast_gate:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 7077
    env_file:
      - fast_gate/.env
    ports:
      - "7077:7077"
    expose:
      - 7077
    depends_on:
      - celery-beat
  backend_protus_pay:
    container_name: backend_protus_pay
    restart: always
    build:
      context: ./fast_pay
      dockerfile: Dockerfile
    image: protus_pay_image
    volumes:
      - ./fast_pay:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 7000
    env_file:
      - fast_pay/.env
    ports:
      - "7000:7000"
    expose:
      - 7000
    depends_on:
      - db_pay
      - celery-beat
  backend_protus_auth:
    container_name: backend_protus_auth
    restart: always
    build:
      context: ./fast_auth
      dockerfile: Dockerfile
    image: protus_auth_image
    volumes:
      - ./fast_auth:/app
    command: uvicorn src.main:app --host 0.0.0.0 --port 7070
    env_file:
      - fast_auth/.env
    ports:
      - "7070:7070"
    expose:
      - 7070
    depends_on:
      - db_auth
      - celery-beat
  backend-messages: &backend-messages
    container_name: backend-messages
    restart: always
    build:
      context: ./messages_app
      dockerfile: Dockerfile
    image: messages_backend_image
    volumes:
      - ./messages_app:/code
      - static_volume:/code/static
    command: uvicorn messages_app.asgi:application --host 0.0.0.0 --port 8000
    env_file:
      - messages_app/.env
    ports:
      - "8000:8000"
    expose:
      - 8000
    depends_on:
      - db_messages
  frontend_messages:
    container_name: frontend_messages
    restart: "no"
    build:
      context: ./messages_vue
      dockerfile: Dockerfile
    image: messages_frontend_image
    volumes:
      - ./messages_vue:/app:rw
      - /app/node_modules
    environment:
      - npm_config_unsafe_perm=true
    ports:
      - "8088:8088"
    expose:
      - 8088
    depends_on:
      - backend-messages
      - db_messages
  frontend_protus:
    container_name: frontend_protus
    restart: "no"
    build:
      context: ./protus_vue
      dockerfile: Dockerfile
    image: protus_frontend_image
    volumes:
      - ./protus_vue:/app:rw
      - /app/node_modules
    environment:
      - npm_config_unsafe_perm=true
    ports:
      - "8080:8080"
    expose:
      - 8080
    depends_on:
      - backend_protus_gate
      - db_auth
      - db_pay
  nginx:
    image: nginx:alpine
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/usr/src/app/static
    ports:
      - "80:80"
    depends_on:
      - backend-messages
      - frontend_messages
      - backend_protus_gate
      - backend_protus_auth
      - backend_protus_pay
      - frontend_protus
  broker:
    image: rabbitmq:3-management
    restart: unless-stopped
    container_name: broker
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - 5672
  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    expose:
      - 6379
    command:
      - /bin/sh
      - -c
      - "redis-server"
    depends_on:
      - backend-messages
  celery:
    <<: *backend-messages
    container_name: messages_celery
    command:
      - /bin/sh
      - -c
      - "celery -A messages_app worker -l info"
    volumes:
      - ./messages_app:/code
    ports: []
    depends_on:
      - backend-messages
      - broker
  celery-beat:
    <<: *backend-messages
    container_name: messages_celery_beat
    command:
      - /bin/sh
      - -c
      - "celery -A messages_app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./messages_app:/code
    ports: []
    depends_on:
      - backend-messages
      - broker
      - celery

volumes:
  static_volume: